# Generated by Django 3.1.1 on 2020-09-06 18:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bland',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'blands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.category')),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_time', models.DateTimeField()),
                ('completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'deals',
            },
        ),
        migrations.CreateModel(
            name='Give_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('新品', '新品、未使用'), ('未使用', '未使用に近い'), ('傷や汚れなし', '目立った傷や汚れなし'), ('やや傷や汚れあり', 'やや傷や汚れあり'), ('傷や汚れあり', '傷や汚れあり'), ('状態が悪い', '全体的に状態が悪い')], max_length=20)),
                ('detail', models.TextField(blank=True, max_length=800, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='give_item', to='app.category')),
            ],
            options={
                'db_table': 'give_items',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'keywords',
            },
        ),
        migrations.CreateModel(
            name='Parent_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bland', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_item', to='app.bland')),
                ('keyword', models.ManyToManyField(related_name='parent_item', to='app.Keyword')),
            ],
            options={
                'db_table': 'parent_items',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=20)),
                ('profile', models.TextField(blank=True, max_length=800, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='')),
                ('background', models.ImageField(blank=True, null=True, upload_to='')),
                ('login', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Want_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='want_item', to='app.parent_item')),
            ],
            options={
                'db_table': 'want_items',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=1, max_digits=2)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewedUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_review', to='app.user')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='done_review', to='app.user')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Request_Deal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('host_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_request_deal', to='app.user')),
                ('join_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_request_deal', to='app.user')),
            ],
            options={
                'db_table': 'request_deal',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, max_length=400, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_deal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request', to='app.request_deal')),
            ],
            options={
                'db_table': 'requests',
            },
        ),
        migrations.CreateModel(
            name='Private_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=400)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', to='app.deal')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='private_message', to='app.user')),
            ],
            options={
                'db_table': 'private_messages',
            },
        ),
        migrations.CreateModel(
            name='PickUp_Places',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('choosingUser', models.ManyToManyField(related_name='pick_up', to='app.User')),
            ],
            options={
                'db_table': 'pickup_places',
            },
        ),
        migrations.AddField(
            model_name='parent_item',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item', to='app.user'),
        ),
        migrations.AddField(
            model_name='parent_item',
            name='request_deal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_item', to='app.request_deal'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, max_length=150, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='app.user')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='Meeting_Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_time', models.DateTimeField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_time', to='app.request')),
            ],
            options={
                'db_table': 'meeting_times',
            },
        ),
        migrations.CreateModel(
            name='Item_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.give_item')),
            ],
            options={
                'db_table': 'item_images',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='done_deal', to='app.user')),
            ],
            options={
                'db_table': 'histories',
            },
        ),
        migrations.AddField(
            model_name='give_item',
            name='parent_item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='give_item', to='app.parent_item'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('follow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followed', to='app.user')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='following', to='app.user')),
            ],
            options={
                'db_table': 'follows',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to='app.give_item')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to='app.user')),
            ],
            options={
                'db_table': 'favorites',
            },
        ),
        migrations.AddField(
            model_name='deal',
            name='history',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='done_deal', to='app.history'),
        ),
        migrations.AddField(
            model_name='deal',
            name='request_deal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deal', to='app.request_deal'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=400)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.give_item')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='app.user')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
    ]
